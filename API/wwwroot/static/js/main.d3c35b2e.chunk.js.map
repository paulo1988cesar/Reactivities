{"version":3,"sources":["app/api/agent.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/models/activity.ts","app/common/form/TextInput.tsx","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/options/categoryOptions.tsx","app/common/form/DateInput.tsx","features/activities/form/ActivityForm.tsx","app/common/form/ErroMessage.tsx","features/users/LoginForm.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/users/List/UserList.tsx","features/users/List/UserFilter.tsx","features/users/List/UserDashboard.tsx","app/layout/NotFound.tsx","features/profile/ProfileHeader.tsx","app/common/photoUpload/PhotoWidgetDropzone.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/photoUploadWidget.tsx","features/profile/ProfilePhotos.tsx","features/profile/ProfileDescription.tsx","features/profile/ProfileCard.tsx","features/profile/ProfileFollowings.tsx","features/profile/ProfileActivities.tsx","features/profile/ProfileContent.tsx","features/profile/ProfilePage.tsx","app/common/modals/ModalContainer.tsx","app/layout/PrivatesRoutes.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","responseBody","response","data","undefined","messsage","toast","status","includes","console","log","removeItem","history","push","info","method","erros","HasOwnProperty","requests","url","get","then","body","post","put","delete","file","formsData","FormData","append","list","params","details","id","create","activity","update","attend","unattend","current","login","user","register","username","uploadPhoto","photo","setMainPhoto","deletePhoto","follow","unfollow","listFollowings","predicate","listActivites","setActivityProps","date","Date","isGoing","attendees","some","a","displayName","toLowerCase","isHost","createAtendee","userName","image","ActivityStore","observable","ref","rootStore","getActivity","activityRegistry","this","reaction","keys","page","clear","loadActivities","activities","sortedActivities","sort","b","getDate","Object","entries","reduce","toISOString","split","URLSearchParams","String","forEach","value","key","Math","ceil","activityCount","groupActivitiesByDate","Array","from","values","Map","action","set","computed","activityId","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","commonStore","configureLogging","LogLevel","Information","build","start","state","invoke","catch","on","comment","runInAction","comments","message","stop","loadingInitial","agent","axiosParams","activitiesEnvelope","userStore","toJS","submitting","attendee","success","event","target","currentTarget","name","loading","filter","UserStore","userRegistry","setToken","modalStore","closeModal","users","userLists","CommonStore","setItem","appLoaded","ModalStore","shallow","open","content","modal","ProfileStore","activeTab","loadFollowings","followings","profile","loadingActivities","acitivies","userActivities","activeIndex","loadingProfile","uploadingPhoto","photos","IsMain","find","following","followersCount","profiles","configure","enforceActions","RootStoreContext","createContext","activityStore","profileStore","observer","useContext","logout","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","styles","borderColor","borderWidth","ActivityListItemAttendees","List","horizontal","map","Popup","trigger","size","circular","bordered","ActivityListItem","host","c","Segment","Group","marginBottom","Content","Header","title","Description","Label","basic","color","Icon","format","toString","venue","city","secondary","clearing","description","floated","activitiesByDate","group","parse","divided","setPredicate","vertical","width","marginTop","attached","active","onclick","has","onChange","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","setPage","totalPages","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","hasMore","initialLoad","Loader","ActivityFormValues","init","category","time","assign","TextInput","input","type","placeholder","meta","touched","Form","Field","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","onBlur","onKeyDown","preventDefault","validade","combineValidators","isRequired","composeValidators","hasLengthGreaterThan","match","createActivity","editActivity","loadActivity","setActivity","setLoading","finally","validate","initialValues","onSubmit","dateAndTime","dateString","timeString","combineDateAndTime","newActivity","uuid","render","handleSubmit","invalid","pristine","component","widths","ErroMessage","Message","statusText","errors","length","flat","err","i","validates","email","password","LoginForm","FORM_ERROR","submitError","dirtySinceLastSubmit","textAlign","RegisterForm","HomePage","isLoggedIn","openModal","className","LoadingComponent","Dimmer","activityImageStyle","activityImageTextStyle","bottom","left","height","attendActivity","cancelAttendance","padding","verticalAlign","createHubConnection","stopHubConnection","addComment","border","Comment","Avatar","Author","Metadata","formatDistance","createdAt","includeSeconds","Text","form","reset","labelPosition","primary","relaxed","ribbon","Extra","ativarDesativarUsuario","Table","compact","celled","definition","selectable","Row","HeaderCell","Body","Cell","collapsing","Checkbox","slider","Footer","fullWidth","colSpan","UserFilter","label","loadUsers","NotFound","Inline","unFollow","isCurrentUser","Statistic","followingCount","Divider","Reveal","animated","visible","hidden","dropzoneStyles","borderRadius","paddingTop","dropzoneAtive","bordercolor","PhotoWidgetDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","getCroppedCanvas","toBlob","blob","files","revokeObjectURL","sub","overflow","addPhotoMode","setPhotoMode","setTarget","deletetarget","setDeleteTarget","Tab","Pane","paddingBottom","item","Card","itemsPerRow","negative","ProfileDescription","extra","ProfileCard","ProfileFollowings","panes","menuItem","pane","loadUserActivities","menu","onTabChange","handleTabChange","objectFit","Meta","ProfileActivities","ProfileContent","setActiveTab","menuPosition","loadProfile","Modal","onClose","Component","rest","props","withRouter","location","setAppLoaded","getUser","path","ActivityDashboard","ActivityDetails","ActivityForm","UserDashboard","ProfilePage","Boolean","hostname","children","pathname","scrollTo","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3c35b2e.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity, IActivitiesEnvelope } from \"../models/activity\";\r\nimport { IUser, IUserList, IUserFormValues } from \"../models/user\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IProfile, IPhoto } from \"../models/profile\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.messsage === \"Network error\" && !error.response) {\r\n    toast.error(\"Network error - check the API!\");\r\n  }\r\n\r\n  const { status, data, config, headers } = error.response;\r\n\r\n  if (\r\n    status === 401 &&\r\n    (headers[\"www-authenticate\"] as string).includes(\r\n      'Bearer error=\"invalid_token\", error_description=\"The token expired'\r\n    )\r\n  ) {\r\n    console.log(error.response);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"You session has expired. Please login again!\");\r\n  }\r\n\r\n  if (status === 404) {\r\n    history.push(\"/NotFound\");\r\n  }\r\n\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.erros.HasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/NotFound\");\r\n  }\r\n\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n\r\n  throw error.response;\r\n});\r\n\r\nconst requests = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios.put(url, body).then(responseBody),\r\n  del: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    let formsData = new FormData();\r\n    formsData.append(\"File\", file);\r\n    return axios\r\n      .post(url, formsData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams): Promise<IActivitiesEnvelope> =>\r\n    axios\r\n      .get(\"/activities\", { params: params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => requests.post(\"/activities\", activity),\r\n  update: (activity: IActivity) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`),\r\n};\r\n\r\nconst Users = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(\"/user/login\", user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(\"/user/register\", user),\r\n  list: (): Promise<IUserList[]> => requests.get(\"/user/list\"),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string): Promise<IProfile> =>\r\n    requests.get(`/profile/${username}`),\r\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n    requests.postForm(`/photo`, photo),\r\n  setMainPhoto: (id: string) => requests.post(`/photo/${id}/setmain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photo/${id}`),\r\n  follow: (username: string) =>\r\n    requests.post(`/profiles/${username}/follow`, {}),\r\n  unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\r\n  listActivites: (username: string, predicate: string) =>\r\n    requests.get(`/profile/${username}/activities?predicate=${predicate}`),\r\n};\r\n\r\nexport default {\r\n  Activities,\r\n  Users,\r\n  Profiles,\r\n};\r\n","import { IActivity, IAttendee } from \"../../models/activity\";\r\nimport { IUser } from \"../../models/user\";\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  // const timeString = time.getHours() + \":\" + time.getMinutes() + \":00\";\r\n  // const year = date.getFullYear();\r\n  // const month = date.getMonth() + 1;\r\n  // const day = date.getDate();\r\n  // const dateString = `${year}-${month}-${day}`;\r\n\r\n  const dateString = date.toISOString().split('T')[0];\r\n  const timeString = time.toISOString().split('T')[1];\r\n\r\n  return new Date(dateString + 'T' + timeString);\r\n};\r\n\r\nexport const setActivityProps = (activity: IActivity, user: IUser) => {\r\n  activity.date = new Date(activity.date);\r\n\r\n  activity.isGoing = activity.attendees.some(\r\n    (a) => a.displayName.toLowerCase() === user.displayName.toLowerCase()\r\n  );\r\n  activity.isHost = activity.attendees.some(\r\n    (a) =>\r\n      a.displayName.toLowerCase() === user.displayName.toLowerCase() && a.isHost\r\n  );\r\n  return activity;\r\n};\r\n\r\nexport const createAtendee = (user: IUser): IAttendee => {\r\n  return {\r\n    displayName: user.displayName,\r\n    isHost: false,\r\n    userName: user.userName!,\r\n    image: user.image!,\r\n  };\r\n};\r\n","import { observable, action, computed, runInAction, reaction, toJS } from \"mobx\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport agent from \"../api/agent\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { setActivityProps, createAtendee } from \"../common/util/util\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\n\r\nconst LIMIT = 2;\r\n\r\nexport default class ActivityStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.page = 0;\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable activityRegistry = new Map();\r\n  @observable activity: IActivity | null = null;\r\n  @observable loadingInitial = false;\r\n  @observable submitting = false;\r\n  @observable target = \"\";\r\n  @observable loading = false;\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n  @observable activityCount = 0;\r\n  @observable page = 0;\r\n  @observable predicate = new Map();\r\n\r\n  @action setPredicate = (predicate: string, value: string | Date) => {\r\n    this.predicate.clear();\r\n\r\n    if (predicate !== \"all\") {\r\n      this.predicate.set(predicate, value);\r\n    }\r\n  };\r\n\r\n  @computed get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"limit\", String(LIMIT));\r\n    params.append(\"offset\", `${this.page ? this.page * LIMIT : 0}`);\r\n\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, value.toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n\r\n    return params;\r\n  }\r\n\r\n  @computed get totalPages() {\r\n    return Math.ceil(this.activityCount / LIMIT);\r\n  }\r\n\r\n  @action setPage = (page: number) => {\r\n    this.page = page;\r\n  };\r\n\r\n  @action createHubConnection = (activityId: string) => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.commonStore.token!,\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log(this.hubConnection!.state))\r\n      .then(() => {\r\n        console.log(\"Attempting to join group\");\r\n        this.hubConnection!.invoke(\"AddToGroup\", activityId);\r\n      })\r\n      .catch((error) => console.log(\"Error establishing connection: \", error));\r\n\r\n    this.hubConnection.on(\"ReceiveComment\", (comment) => {\r\n      runInAction(\"loading comments\", () => {\r\n        this.activity!.comments.push(comment);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on(\"Send\", (message) => {\r\n      toast.info(message);\r\n    });\r\n  };\r\n\r\n  @action stopHubConnection = () => {\r\n    this.hubConnection!.invoke(\"RemoveFromGroup\", this.activity!.id)\r\n      .then(() => {\r\n        this.hubConnection!.stop();\r\n      })\r\n      .then(() => console.log(\"Connection Stopped\"))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  @action addComment = async (values: any) => {\r\n    values.activityId = this.activity!.id;\r\n\r\n    try {\r\n      await this.hubConnection!.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @computed get activitiesByDate() {\r\n    return this.groupActivitiesByDate(\r\n      Array.from(this.activityRegistry.values())\r\n    );\r\n  }\r\n\r\n  groupActivitiesByDate(activities: IActivity[]) {\r\n    const sortedActivities = activities.sort(\r\n      (a, b) => a.date.getDate() - b.date.getDate()\r\n    );\r\n    return Object.entries(\r\n      sortedActivities.reduce((activities, activity) => {\r\n        const date = activity.date.toISOString().split(\"T\")[0];\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: IActivity[] })\r\n    );\r\n  }\r\n\r\n  //carrega todas as atividades\r\n  @action loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n\r\n    try {\r\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\r\n      const { activities, activityCount } = activitiesEnvelope;\r\n\r\n      runInAction(\"loading activities\", () => {\r\n        activities.forEach((activity: IActivity) => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activityRegistry.set(activity.id, activity);\r\n          this.activityCount = activityCount;\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(\"loading activities error\", () => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.activity = activity;\r\n      return toJS(activity);\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        runInAction(\"getting activity\", () => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activity = activity;\r\n          this.activityRegistry.set(activity.id, activity);\r\n          this.loadingInitial = false;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        runInAction(\"get activity error\", () => {\r\n          this.loadingInitial = false;\r\n        });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  @action clearActivity = () => {\r\n    this.activity = null;\r\n  };\r\n\r\n  getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  //Seleciona as atividades por id\r\n  @action selectActivity = (id: string) => {\r\n    this.activity = this.activityRegistry.get(id);\r\n  };\r\n\r\n  @action createActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const attendee = createAtendee(this.rootStore.userStore.user!);\r\n      attendee.isHost = true;\r\n      let attendees = [];\r\n      attendees.push(attendee);\r\n      activity.attendees = attendees;\r\n      activity.comments = [];\r\n      activity.isHost = true;\r\n      runInAction(\"creating activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n      });\r\n      toast.success(\"Activity saved successfully\");\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      toast.error(\"Error: \" + error.response);\r\n    } finally {\r\n      runInAction(\"creating activity error\", () => {\r\n        this.submitting = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action editActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(\"editing activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.activity = activity;\r\n      });\r\n      toast.success(\"Activity saved successfully\");\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Error: \" + error.response);\r\n    } finally {\r\n      runInAction(\"editing activity error\", () => {\r\n        this.submitting = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action deleteActivity = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    this.submitting = true;\r\n    this.target = event.currentTarget.name;\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(\"deleting activity\", () => {\r\n        this.activityRegistry.delete(id);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(\"deleting activity error\", () => {\r\n        this.submitting = false;\r\n        this.target = \"\";\r\n      });\r\n    }\r\n  };\r\n\r\n  @action attendActivity = async () => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      const attendee = createAtendee(this.rootStore.userStore.user!);\r\n      await agent.Activities.attend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees.push(attendee);\r\n          this.activity.isGoing = true;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem signing up to activity\");\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action cancelAttendance = async () => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.unattend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees = this.activity.attendees.filter(\r\n            (a) =>\r\n              a.displayName.toLowerCase() !==\r\n              this.rootStore.userStore.user!.displayName.toLowerCase()\r\n          );\r\n          this.activity.isGoing = false;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem canceling the attendance\");\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { observable, action, computed, runInAction } from \"mobx\";\r\nimport { IUserList, IUser, IUserFormValues } from \"../models/user\";\r\nimport agent from \"../api/agent\";\r\nimport { history } from \"../..\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable userRegistry = new Map();\r\n  @observable userLists: IUserList[] = [];\r\n  @observable userList: IUserList | null = null;\r\n  @observable loadingInitial = false;\r\n  @observable submitting = false;\r\n  @observable target = \"\";\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @computed get getUsers() {\r\n    return this.userRegistry;\r\n  }\r\n\r\n  @action login = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.Users.login(values);\r\n      runInAction(\"loading users\", () => {\r\n        this.user = user;\r\n      });\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action logout = () => {\r\n    this.rootStore.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  @action getUser = async () => {\r\n    try {\r\n      const user = await agent.Users.current();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action register = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.Users.register(values);\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action loadUsers = async () => {\r\n    this.loadingInitial = true;\r\n\r\n    try {\r\n      const users = await agent.Users.list();\r\n\r\n      runInAction(\"loading users\", () => {\r\n        this.userLists = [];\r\n        users.forEach((user: IUserList) => {\r\n          this.userRegistry.set(user.id, user);\r\n          this.userLists.push(user);\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(\"loading users error\", () => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from './rootStore';\r\nimport { observable, action, reaction } from 'mobx';\r\n\r\nexport default class CommonStore {\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token);\r\n                } else {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    @observable token: string | null = window.localStorage.getItem('jwt');\r\n    @observable appLoaded = false;\r\n\r\n    @action setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n\r\n}","import { RootStore } from \"./rootStore\";\r\nimport { observable, action } from \"mobx\";\r\n\r\nexport default class ModalStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable.shallow modal = {\r\n    open: false,\r\n    body: null\r\n  };\r\n\r\n  @action openModal = (content: any) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  }\r\n\r\n  @action closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  }\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\r\nimport { IProfile, IPhoto, IUserActivity } from \"../models/profile\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable followings: IProfile[] = [];\r\n  @observable activeTab: number = 0;\r\n  @observable userActivities: IUserActivity[] = [];\r\n  @observable loadingActivities = false;\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.userName === this.profile.username;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n\r\n    try {\r\n      const acitivies = await agent.Profiles.listActivites(\r\n        username,\r\n        predicate!\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.userActivities = acitivies;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem to loading ativities\");\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action setActiveTab = (activeIndex: number) => {\r\n    this.activeTab = activeIndex;\r\n  };\r\n\r\n  @action loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action uploadPhoto = async (file: Blob) => {\r\n    this.uploadingPhoto = true;\r\n\r\n    try {\r\n      const photo = await agent.Profiles.uploadPhoto(file);\r\n\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.IsMain && this.rootStore.userStore.user) {\r\n            this.rootStore.userStore.user.image = photo.url;\r\n            this.profile.image = photo.url;\r\n            this.uploadingPhoto = false;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Problem uploading photo\");\r\n      runInAction(() => {\r\n        this.uploadingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action setMainPhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n\r\n      runInAction(() => {\r\n        this.rootStore.userStore.user!.image = photo.url;\r\n        this.profile!.photos.find((a) => a.id === photo.id)!.IsMain = true;\r\n        this.profile!.image = photo.url;\r\n        this.profile!.photos.find((a) => a.IsMain)!.IsMain = false;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        toast.error(\"Problem setting photo as main\");\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action deletePhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile!.photos.filter(\r\n          (a) => a.id !== photo.id\r\n        );\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem deleting the photo\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action follow = async (username: string) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.follow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = true;\r\n        this.profile!.followersCount++;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action unFollow = async (username: string) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.unfollow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = false;\r\n        this.profile!.followersCount--;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadFollowings = async (predicate: string) => {\r\n    this.loading = true;\r\n    try {\r\n      const profiles = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = profiles;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem loading followings\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import ActivityStore from './activityStore';\r\nimport UserStore from './userStore';\r\nimport CommonStore from './commonStore';\r\nimport ModalStore from './modalStore';\r\nimport ProfileStore from './profileStore';\r\nimport { createContext } from 'react';\r\nimport { configure } from 'mobx';\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport class RootStore {\r\n    activityStore: ActivityStore;\r\n    userStore : UserStore;\r\n    commonStore: CommonStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n\r\n    constructor() {\r\n        this.activityStore = new ActivityStore(this);\r\n        this.userStore = new UserStore(this);\r\n        this.commonStore = new CommonStore(this);        \r\n        this.modalStore = new ModalStore(this);\r\n        this.profileStore = new ProfileStore(this);\r\n    }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());","import React, { useContext } from \"react\";\r\nimport { Menu, Container, Button, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, logout } = rootStore.userStore;\r\n\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item name=\"users\" as={NavLink} to=\"/users\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src={user.image || '/assets/user.png'} />\r\n            <Dropdown pointing=\"top left\" text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profile/${user?.displayName.toLowerCase()}`}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import React from \"react\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst styles = {\r\n  borderColor: 'cyan',\r\n  borderWidth: 3\r\n}\r\n\r\nconst ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <List.Item key={attendee.userName}>\r\n          <Popup\r\n            header={attendee.displayName}\r\n            trigger={\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            }\r\n          />\r\n        </List.Item>\r\n      ))}\r\n      ;\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ActivityListItemAttendees;\r\n","import React from \"react\";\r\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport Moment from \"react-moment\";\r\nimport ActivityListItemAttendees from \"./ActivityListItemAttendees\";\r\n\r\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n  const host = activity.attendees.filter((c) => c.isHost)[0];\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              circular\r\n              src={host.image || \"/assets/user.png\"}\r\n              style={{ marginBottom: 3 }}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by\r\n                <Link to={`/profile/${host.userName}`}> {host.displayName}</Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"orange\"\r\n                    content=\"You are hosting this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"green\"\r\n                    content=\"You are going this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name=\"clock\" />{\" \"}\r\n        <Moment format=\"h:mm:ss a\">{activity.date.toString()}</Moment>\r\n        <Icon name=\"marker\" /> {activity.venue}, {activity.city}\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendees attendees={activity.attendees} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          color=\"blue\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItem;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { format } from 'date-fns';\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activitiesByDate } = rootStore.activityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      {activitiesByDate.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Label size=\"large\" color=\"blue\">\r\n            {/* <Moment format=\"DD/MM/YYYY\">{group}</Moment> */}\r\n            {format(Date.parse(group), 'eeee do MMMM')}\r\n          </Label>\r\n          <Item.Group divided>\r\n            {activities.map(activity => (\r\n              <ActivityListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { Menu, Header } from \"semantic-ui-react\";\r\nimport { Calendar } from \"react-widgets\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ActivityFilters = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { predicate, setPredicate } = rootStore.activityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size={\"large\"} style={{ width: \"100%\", marginTop: 50 }}>\r\n        <Header icon={\"filter\"} attached color={\"teal\"} content={\"Filters\"} />\r\n        <Menu.Item\r\n          active={predicate.size === 0}\r\n          onclick={() => setPredicate(\"all\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"all\"}\r\n          content={\"All Activities\"}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"username\"}\r\n          content={\"I'm Going\"}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"host\"}\r\n          content={\"I'm hosting\"}\r\n        />\r\n      </Menu>\r\n      <Header\r\n        icon={\"calendar\"}\r\n        attached\r\n        color={\"teal\"}\r\n        content={\"Select Date\"}\r\n      />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date!)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityFilters);\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nconst ActivityListItemPlaceholder = () => {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 50 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color='blue' floated='right' content='View' />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ActivityListItemPlaceholder;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport ActivityList from \"../dashboard/ActivityList\";\r\nimport ActivityFilters from '../dashboard/ActivityFilters';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { loadActivities, loadingInitial, setPage, page, totalPages } = rootStore.activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPage(page + 1);\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadActivities();\r\n  }, [loadActivities]);\r\n    \r\n  return (\r\n\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {loadingInitial && page === 0 ? <ActivityListItemPlaceholder/> : (\r\n          <InfiniteScroll\r\n          pageStart={0}\r\n          loadMore={handleGetNext}\r\n          hasMore={!loadingNext && page + 1 < totalPages}\r\n          initialLoad={false} >\r\n        <ActivityList />\r\n        </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters/>\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","export interface IActivitiesEnvelope {\r\n  activities: IActivity[],\r\n  activityCount: number\r\n}\r\n\r\nexport interface IActivity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  date: Date;\r\n  city: string;\r\n  venue: string;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  attendees: IAttendee[];\r\n  comments: IComment[];\r\n}\r\n\r\nexport interface IComment {\r\n  id: string;\r\n  createdAt: Date;\r\n  body: string;\r\n  username: string;\r\n  displayName: string;\r\n  image: string;\r\n}\r\n\r\nexport interface IActivityFormValues extends Partial<IActivity> {\r\n  time?: Date;\r\n}\r\n\r\nexport class ActivityFormValues implements IActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date?: Date = undefined;\r\n  time?: Date = undefined;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(init?: IActivityFormValues) {\r\n    if (init && init.date) {\r\n      init.time = init.date;\r\n    }\r\n\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IAttendee {\r\n  userName: string;\r\n  displayName: string;\r\n  image: string;\r\n  isHost: boolean;\r\n  following?: boolean;\r\n}\r\n","import React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  type,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <input {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color='red'>\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextAreaInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  rows,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <textarea rows={rows} {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color='red'>\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextAreaInput;","import React from 'react'\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst SelectInput: React.FC<IProps> = ({\r\n    input,\r\n    width,\r\n    options,\r\n    placeholder,\r\n    meta: { touched, error }\r\n  }) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <Select \r\n            value={input.value}\r\n            onChange={(e, data) => input.onChange(data.value)}\r\n            placeholder={placeholder}\r\n            options={options}\r\n        />\r\n        {touched && error && (\r\n          <Label basic color='red'>\r\n            {error}\r\n          </Label>\r\n        )}\r\n      </Form.Field>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","export const category = [\r\n  { key: 'drinks', text: 'Drinks', value: 'drinks' },\r\n  { key: 'culture', text: 'Culture', value: 'culture' },\r\n  { key: 'film', text: 'Film', value: 'film' },\r\n  { key: 'food', text: 'Food', value: 'food' },\r\n  { key: 'music', text: 'Music', value: 'music' },\r\n  { key: 'travel', text: 'Travel', value: 'travel' }\r\n];","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\ninterface IProps extends FieldRenderProps<Date, HTMLElement>, FormFieldProps {}\r\n\r\nconst DateInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  placeholder,\r\n  date = false,\r\n  time = false,\r\n  meta: { touched, error },\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <DateTimePicker\r\n        placeholder={placeholder}\r\n        onChange={input.onChange}\r\n        onBlur={input.onBlur}\r\n        onKeyDown={(e) => e.preventDefault()}\r\n        value={input.value || null}\r\n        date={date}\r\n        time={time}\r\n        //{...rest}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Segment, Form, Button, Grid } from \"semantic-ui-react\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\r\nimport SelectInput from \"../../../app/common/form/SelectInput\";\r\nimport { category } from \"../../../app/common/options/categoryOptions\";\r\nimport DateInput from \"../../../app/common/form/DateInput\";\r\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\r\nimport { combineValidators, isRequired, composeValidators, hasLengthGreaterThan } from 'revalidate';\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst validade = combineValidators({\r\n  title: isRequired({message: 'The event title is required.'}),\r\n  category: isRequired('Category'),\r\n  description: composeValidators(\r\n               isRequired('description'),\r\n               hasLengthGreaterThan(4)({message: 'The description needs to be at least 5 characters'}))(),\r\n  city: isRequired('City'),\r\n  venue: isRequired('Venue'),\r\n  date: isRequired('Date'),\r\n  time: isRequired('Time')\r\n})\r\n\r\ninterface DetailsParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailsParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { createActivity,    editActivity,    submitting, loadActivity } = rootStore.activityStore;\r\n\r\n  const [activity, setActivity] = useState(new ActivityFormValues());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      setLoading(true);\r\n      loadActivity(match.params.id)\r\n        .then(activity => setActivity(new ActivityFormValues(activity)))\r\n        .finally(() => setLoading(false));\r\n    }\r\n  }, [loadActivity, match.params.id]);\r\n\r\n  const handleFinalFormSubmmit = (values: any) => {\r\n    const dateAndTime = combineDateAndTime(values.date, values.time);\r\n    const { date, time, ...activity } = values;\r\n    activity.date = dateAndTime;\r\n\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid()\r\n      };\r\n      createActivity(newActivity);\r\n    } else {\r\n      editActivity(activity);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <Segment clearing>\r\n          <FinalForm\r\n            validate={validade}\r\n            initialValues={activity}\r\n            onSubmit={handleFinalFormSubmmit}\r\n            render={({ handleSubmit, invalid, pristine }) => (\r\n              <Form onSubmit={handleSubmit} loading={loading}>\r\n                <Field\r\n                  name=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={activity.title}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  rows={3}\r\n                  value={activity.description}\r\n                  component={TextAreaInput}\r\n                />\r\n                <Field\r\n                  name=\"category\"\r\n                  options={category}\r\n                  placeholder=\"Category\"\r\n                  value={activity.category}\r\n                  component={SelectInput}\r\n                />\r\n                <Form.Group widths=\"equal\">\r\n                  <Field\r\n                    component={DateInput}\r\n                    name=\"date\"\r\n                    date={true}\r\n                    placeholder=\"Date\"\r\n                    value={activity.date}\r\n                  />\r\n                  <Field\r\n                    component={DateInput}\r\n                    name=\"time\"\r\n                    time={true}\r\n                    placeholder=\"Time\"\r\n                    value={activity.time}\r\n                  />\r\n                </Form.Group>\r\n                <Field\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  value={activity.city}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"venue\"\r\n                  placeholder=\"Venue\"\r\n                  value={activity.venue}\r\n                  component={TextInput}\r\n                />\r\n                <Button\r\n                  disabled={loading || invalid || pristine}\r\n                  loading={submitting}\r\n                  floated=\"right\"\r\n                  positive\r\n                  type=\"submit\"\r\n                  content=\"Save\"\r\n                  onClick={handleSubmit}\r\n                />\r\n                <Button\r\n                  disabled={loading}\r\n                  onClick={activity.id ? () => history.push(`/activities/${activity.id}`) : () => history.push(\"/activities\")}\r\n                  floated=\"right\"\r\n                  type=\"button\"\r\n                  content=\"Cancel\"\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import React from 'react';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface IProps {\r\n    error: AxiosResponse,\r\n    text?: string\r\n}\r\n\r\nconst ErroMessage: React.FC<IProps> = ({ error, text}) => {\r\n    return (\r\n        <Message error>\r\n            <Message.Header>{error.statusText}</Message.Header>\r\n            {error.data && Object.keys(error.data.errors).length > 0 && (\r\n                <Message.List>\r\n                    {Object.values(error.data.errors).flat().map((err, i) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n            {text} \r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default ErroMessage;","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport ErroMessage from '../../app/common/form/ErroMessage';\r\n\r\nconst validates = combineValidators({\r\n  email: isRequired(\"email\"),\r\n  password: isRequired(\"password\")\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { login } = rootStore.userStore;\r\n\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        login(values).catch(error => ({\r\n          [FORM_ERROR]: error\r\n        }))\r\n      }\r\n      validate={validates}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\r\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErroMessage error={submitError} text='Invalid username or password'/>\r\n          )}\r\n          <Button\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            loading={submitting}\r\n            positive\r\n            color='teal'\r\n            content=\"Login\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport ErroMessage from \"../../app/common/form/ErroMessage\";\r\n\r\nconst validates = combineValidators({\r\n  username: isRequired(\"username\"),\r\n  displayName: isRequired(\"displayName\"),\r\n  email: isRequired(\"email\"),\r\n  password: isRequired(\"password\")\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { register } = rootStore.userStore;\r\n\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        register(values).catch(error => ({\r\n          [FORM_ERROR]: error\r\n        }))\r\n      }\r\n      validate={validates}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <Field\r\n            name=\"username\"\r\n            component={TextInput}\r\n            placeholder=\"User Name\"\r\n          />\r\n          <Field\r\n            name=\"displayName\"\r\n            component={TextInput}\r\n            placeholder=\"Display Nome\"\r\n          />\r\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErroMessage\r\n              error={submitError}\r\n            />\r\n          )}\r\n          <Button\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            loading={submitting}\r\n            positive\r\n            color=\"teal\"\r\n            content=\"Register\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Container, Segment, Header, Button, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nconst HomePage = () => {\r\n  const token = window.localStorage.getItem('jwt');\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn, user } = rootStore.userStore;\r\n  const { openModal } = rootStore.modalStore;\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {isLoggedIn && user && token ? (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content={`Welcome back ${user.displayName}`} />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to activities\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button onClick={() => openModal(<LoginForm/>)} size=\"huge\" inverted>\r\n              Login\r\n            </Button>\r\n            <Button onClick={() => openModal(<RegisterForm/>)} size=\"huge\" inverted>\r\n              Register\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n\r\n    // <Container style={{ marginTop: '7em'}}>\r\n    //     <h1>Home Page</h1>\r\n    //     <h3>Go To <Link to='/activities'>Activities</Link></h3>\r\n    // </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nconst LoadingComponent: React.FC<{inverted?: boolean, content?: string}> = ({inverted= true, content}) => {\r\n    return (\r\n        <Dimmer active inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}\r\n\r\nexport default LoadingComponent;","import React, { useContext } from \"react\";\r\nimport { Segment, Item, Button, Header, Image } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport Moment from \"react-moment\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\r\n  activity,\r\n}) => {\r\n\r\n const rootStore = useContext(RootStoreContext);\r\n const {attendActivity, cancelAttendance, loading} = rootStore.activityStore;\r\n\r\n const host = activity.attendees.filter(c=> c.isHost)[0];\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        <Image\r\n          src={`/assets/categoryImages/${activity!.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>\r\n                  <Moment format=\"DD/MM/YYYY\">{activity.date}</Moment>\r\n                </p>\r\n                <p>\r\n                  Hosted by <Link to={`/profile/${host.displayName}`}> <strong> {host.displayName} </strong></Link>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <Button\r\n            color=\"orange\"\r\n            floated=\"right\"\r\n            as={Link}\r\n            to={`/manage/${activity.id}`}\r\n          >\r\n            Manage Event\r\n          </Button>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={cancelAttendance}>Cancel attendance</Button>\r\n        ) : (\r\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">Join Activity</Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","import React from 'react'\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Moment from 'react-moment';\r\n\r\nconst ActivityDetailedInfo: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n    return (\r\n        <Segment.Group>\r\n              <Segment attached='top'>\r\n                <Grid>\r\n                  <Grid.Column width={1}>\r\n                    <Icon size='large' color='teal' name='info' />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={15}>\r\n                    <p>{activity.description}</p>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Segment>\r\n              <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                  <Grid.Column width={1}>\r\n                    <Icon name='calendar' size='large' color='teal' />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={15}>\r\n                    <span>\r\n                        <Moment format=\"DD/MM/YYYY\">{activity.date}</Moment> at <Moment format=\"h:mm:ss a\">{activity.date}</Moment>\r\n                    </span>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Segment>\r\n              <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                  <Grid.Column width={1}>\r\n                    <Icon name='marker' size='large' color='teal' />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={11}>\r\n                    <span>\r\n                        {activity.venue}, {activity.city}\r\n                    </span>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Segment>\r\n            </Segment.Group>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDetailedInfo);","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { formatDistance } from \"date-fns\";\r\n\r\nconst ActivityDetailedChat = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createHubConnection,\r\n    stopHubConnection,\r\n    addComment,\r\n    activity,\r\n  } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    createHubConnection(activity!.id);\r\n    return () => {\r\n      stopHubConnection();\r\n    };\r\n  }, [createHubConnection, stopHubConnection, activity]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          {activity &&\r\n            activity.comments &&\r\n            activity.comments.map((comment) => (\r\n              <Comment key={comment.id}>\r\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n                <Comment.Content>\r\n                  <Comment.Author as={Link} to={`/profile/${comment.username}`}>\r\n                    {comment.displayName}\r\n                  </Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>{formatDistance(new Date(comment.createdAt), new Date(),  {includeSeconds: true})}</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>{comment.body}</Comment.Text>\r\n                </Comment.Content>\r\n              </Comment>\r\n            ))}\r\n\r\n          <FinalForm\r\n            onSubmit={addComment}\r\n            render={({ handleSubmit, submitting, form }) => (\r\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\r\n                <Field\r\n                  name=\"body\"\r\n                  component={TextAreaInput}\r\n                  rows={2}\r\n                  placeholder=\"Add your comment\"\r\n                />\r\n                <Button\r\n                  content=\"Add Reply\"\r\n                  labelPosition=\"left\"\r\n                  icon=\"edit\"\r\n                  primary\r\n                  loading={submitting}\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedChat);\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, List, Item, Label, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst ActivityDetailedSidebar: React.FC<IProps> = ({ attendees }) => {\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item key={attendee.userName} style={{ position: \"relative\" }}>\r\n              {attendee.isHost && <Label\r\n                style={{ position: \"absolute\" }}\r\n                color=\"orange\"\r\n                ribbon=\"right\"\r\n              >\r\n                Host\r\n              </Label>}\r\n              <Image size=\"tiny\" src={attendee.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link key={attendee.userName!} to={`/profile/${attendee.userName}`}>{attendee.displayName}</Link>\r\n                </Item.Header>\r\n                {attendee.following && <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedSidebar);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\ninterface DetailsParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailsParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activity, loadActivity, loadingInitial } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id);\r\n  }, [loadActivity, match.params.id, history]);\r\n\r\n  if (loadingInitial || !activity)\r\n    return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar attendees={activity.attendees} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { Table, Checkbox, Button, Icon } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ativarDesativarUsuario = () => {\r\n  toast.success(\"Usuário desativado com sucesso.\");\r\n};\r\n\r\nconst UserList: React.FC = () => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { loadingInitial, userLists } = rootStore.userStore;\r\n  \r\n  if (loadingInitial)\r\n    return <LoadingComponent content=\"Loading data...\" />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Table compact celled definition selectable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell />\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>UserName</Table.HeaderCell>\r\n            <Table.HeaderCell>E-mail address</Table.HeaderCell>\r\n            <Table.HeaderCell>Active</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {userLists.map(user => (\r\n            <Table.Row key={user.id}>\r\n              <Table.Cell collapsing>\r\n                <Checkbox slider onClick={ativarDesativarUsuario} />\r\n              </Table.Cell>\r\n              <Table.Cell>{user.displayName}</Table.Cell>\r\n              <Table.Cell><Link to={`/profile/${user.username}`}>{user.username}</Link></Table.Cell>\r\n              <Table.Cell>{user.email}</Table.Cell>\r\n              <Table.Cell>{user.status}</Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n\r\n        <Table.Footer fullWidth>\r\n          <Table.Row>\r\n            <Table.HeaderCell />\r\n            <Table.HeaderCell colSpan=\"4\">\r\n              <Button\r\n                floated=\"right\"\r\n                icon\r\n                labelPosition=\"left\"\r\n                primary\r\n                size=\"small\"\r\n              >\r\n                <Icon name=\"user\" /> Add User\r\n              </Button>\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(UserList);\r\n","import React, { Fragment } from \"react\";\r\nimport { Form, Button, Checkbox } from \"semantic-ui-react\";\r\n\r\nconst UserFilter = () => {\r\n  return (\r\n    <Fragment>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input placeholder=\"First Name\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input placeholder=\"Last Name\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Checkbox label=\"I agree to the Terms and Conditions\" />\r\n        </Form.Field>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserFilter;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport UserList from \"./UserList\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport UserFilter from './UserFilter';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst UserDashboard: React.FC = () => {\r\n  \r\n  const rootStore = useContext(RootStoreContext);\r\n  const { loadUsers, loadingInitial } = rootStore.userStore;\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, [loadUsers]);\r\n\r\n  if (loadingInitial)\r\n    return <LoadingComponent content=\"Loading data...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={12}>\r\n        <UserList />\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        <UserFilter/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(UserDashboard);\r\n","import React from 'react';\r\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere but couldn't find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to Activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal,\r\n} from \"semantic-ui-react\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n  isCurrentUser: boolean;\r\n  loading: boolean;\r\n  follow: (username: string) => void;\r\n  unFollow: (username: string) => void;\r\n}\r\n\r\nconst ProfileHeader: React.FC<IProps> = ({\r\n  profile,\r\n  follow,\r\n  unFollow,\r\n  isCurrentUser,\r\n  loading,\r\n}) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={11}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\">{profile.displayName}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={5}>\r\n          <Statistic.Group widths={3}>\r\n            <Statistic label=\"Photos\" value={profile.photos.length} />\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          {!isCurrentUser && (\r\n            <Reveal animated=\"move up\">\r\n              <Reveal.Content visible style={{ width: \"100%\" }}>\r\n                <Button\r\n                  fluid\r\n                  color=\"teal\"\r\n                  content={profile.following ? \"Following\" : \"Not Following\"}\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <Button\r\n                  loading={loading}\r\n                  fluid\r\n                  basic\r\n                  color={profile.following ? \"red\" : \"green\"}\r\n                  content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n                  onClick={\r\n                    profile.following\r\n                      ? () => unFollow(profile.username)\r\n                      : () => follow(profile.username)\r\n                  }\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Icon, Header } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  setFiles: (files: object[]) => void;\r\n}\r\n\r\nconst dropzoneStyles = {\r\n  border: \"dashed 3px\",\r\n  borderColor: \"#eee\",\r\n  borderRadius: \"5px\",\r\n  paddingTop: \"30px\",\r\n  textAlign: \"center\" as \"center\",\r\n  height: \"200px\"\r\n};\r\n\r\nconst dropzoneAtive = {\r\n  bordercolor: \"green\"\r\n};\r\n\r\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFiles }) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file: object) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        })\r\n      )\r\n    );\r\n  }, [setFiles]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyles, ...dropzoneAtive } : dropzoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","import React, { useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface IProps {\r\n  setImage: (file: Blob) => void;\r\n  imagePreview: string;\r\n}\r\n\r\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\r\n  const cropper = useRef<Cropper>(null);\r\n  const cropImage = () => {\r\n    if (\r\n      cropper.current &&\r\n      typeof cropper.current.getCroppedCanvas() === 'undefined'\r\n    ) {\r\n      return;\r\n    }\r\n    cropper &&\r\n      cropper.current &&\r\n      cropper.current.getCroppedCanvas().toBlob((blob: any) => {\r\n        setImage(blob);\r\n      }, 'image/jpeg');\r\n  };\r\n\r\n  return (\r\n    <Cropper\r\n      ref={cropper}\r\n      src={imagePreview}\r\n      style={{ height: 400, width: \"100%\" }}\r\n      aspectRatio={1 / 1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      dragMode=\"move\"\r\n      scalable={true}\r\n      cropBoxMovable={true}\r\n      cropBoxResizable={true}\r\n      crop={cropImage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Header, Grid, Button } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\n\r\ninterface IProps {\r\n  uploadPhoto: (file: Blob) => void; \r\n  loading: boolean;\r\n}\r\n\r\nconst PhotoUploadWidget: React.FC<IProps> = ({uploadPhoto, loading}) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n          {files.length > 0 && <PhotoWidgetCropper setImage={setImage} imagePreview={files[0].preview} /> }\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n          {files.length > 0 && \r\n            <Fragment>\r\n              <div className='img-preview' style={{ minHeight: '200px', overflow:'hidden'}} />\r\n              <Button.Group widths={2}>\r\n                <Button positive icon='check' loading={loading} onClick={() => uploadPhoto(image!)} />              \r\n                <Button icon='close' disabled={loading} onClick={() => setFiles([])} />\r\n              </Button.Group>\r\n            </Fragment>\r\n          }\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport PhotoUploadWidget from \"../../app/common/photoUpload/photoUploadWidget\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMainPhoto,\r\n    loading,\r\n    deletePhoto,\r\n  } = rootStore.profileStore;\r\n  const [addPhotoMode, setPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState<string | undefined>(undefined);\r\n  const [deletetarget, setDeleteTarget] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadPhoto = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setPhotoMode(false));\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\r\n          <Header floated=\"left\" item=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadPhoto}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          name={photo.id}\r\n                          onClick={(e) => {\r\n                            setMainPhoto(photo);\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          disabled={photo.IsMain}\r\n                          loading={loading && target === photo.id}\r\n                          basic\r\n                          positive\r\n                          content=\"Main\"\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.IsMain}\r\n                          onClick={(e) => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name);\r\n                          }}\r\n                          loading={loading && deletetarget === photo.id}\r\n                          basic\r\n                          negative\r\n                          icon=\"trash\"\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import React from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProfileDescription: React.FC = () => {\r\n  return (\r\n    <Card as={Link} to={`/profile/username`}>\r\n      <Image src={'/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{'display name'}</Card.Header>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div>\r\n          <Icon name='user' />\r\n          22 Followers\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileDescription;\r\n","import React from \"react\";\r\nimport { Card, Image, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n}\r\n\r\nconst ProfileCard: React.FC<IProps> = ({ profile }) => {\r\n  return (\r\n    <Card as={Link} to={`/profile/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div>\r\n          <Icon name=\"user\" />\r\n          {profile.followersCount} Followers\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React, { useContext } from \"react\";\r\nimport { Tab, Grid, Header, Card } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfileFollowings = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { profile, followings, loading, activeTab } = rootStore.profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile!.displayName}`\r\n                : `People ${profile!.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={5}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default ProfileFollowings;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst panes = [\r\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\r\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities\r\n  } = rootStore.profileStore!;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = 'past';\r\n        break;\r\n      case 2:\r\n        predicate = 'hosting';\r\n        break;\r\n      default:\r\n        predicate = 'future';\r\n        break;\r\n    }\r\n    loadUserActivities(profile!.username, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar' content={'Activities'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: IUserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);\r\n","import React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport ProfilePhotos from './ProfilePhotos';\r\nimport ProfileDescription from './ProfileDescription';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfileActivities from './ProfileActivities';\r\n\r\nconst panes = [\r\n  { menuItem: 'About', render: () => <ProfileDescription /> },\r\n  { menuItem: 'Photos', render: () => <ProfilePhotos /> },\r\n  { menuItem: 'Activities', render: () => <ProfileActivities /> },\r\n  { menuItem: 'Followers', render: () => <ProfileFollowings /> },\r\n  { menuItem: 'Following', render: () => <ProfileFollowings /> }\r\n];\r\n\r\ninterface IProps {\r\n    setActiveTab: (activeIndex: any) => void;\r\n}\r\n\r\nconst ProfileContent: React.FC<IProps> = ({setActiveTab}) => {\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition='right'\r\n      panes={panes}\r\n      onTabChange={(e, data) => setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContent;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface RouteParams {\r\n  username: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadingProfile,\r\n    profile,\r\n    loadProfile,\r\n    follow,\r\n    unFollow,\r\n    isCurrentUser,\r\n    loading,\r\n    setActiveTab,\r\n  } = rootStore.profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(match.params.username);\r\n  }, [loadProfile, match]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHeader\r\n          profile={profile!}\r\n          follow={follow}\r\n          unFollow={unFollow}\r\n          isCurrentUser={isCurrentUser}\r\n          loading={loading}\r\n        />\r\n        <ProfileContent setActiveTab={setActiveTab} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import React, { useContext} from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n const ModalContainer = () => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { modal: {open, body}, closeModal } = rootStore.modalStore;\r\n\r\n  return (\r\n    <Modal open={open} onClose={closeModal} size='mini'>\r\n      <Modal.Content>\r\n        {body}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);","import React, { useContext } from \"react\";\r\nimport {\r\n  RouteProps,\r\n  RouteComponentProps,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>>;\r\n}\r\n\r\nconst PrivatesRoutes: React.FC<IProps> = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn } = rootStore.userStore;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to={\"/\"} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(PrivatesRoutes);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Route,\n  withRouter,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport UserDashboard from \"../../features/users/List/UserDashboard\";\nimport NotFound from \"./NotFound\";\nimport { ToastContainer } from \"react-toastify\";\nimport ProfilePage from \"../../features/profile/ProfilePage\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport PrivatesRoutes from \"./PrivatesRoutes\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const { setAppLoaded, token, appLoaded } = rootStore.commonStore;\n  const { getUser } = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded());\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token]);\n\n  if (!appLoaded) return <LoadingComponent content=\"Loading app\" />;\n\n  return (\n    <Fragment>\n      <ModalContainer />\n      <ToastContainer position=\"bottom-right\" />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                {\" \"}\n                //Somente um compoente pode ser executado de cada vez\n                <PrivatesRoutes\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivatesRoutes\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivatesRoutes\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivatesRoutes path=\"/users\" component={UserDashboard} />\n                <PrivatesRoutes\n                  path=\"/profile/:username\"\n                  component={ProfilePage}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { withRouter } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\nconst ScrollToTop = ({ children, location: {pathname }}: any) => {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport  ScrollToTop from './app/layout/ScrollToTop';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport dateFnsLocalizer from 'react-widgets-date-fns';\n\ndateFnsLocalizer();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history}>\n        <ScrollToTop>\n            <App />\n        </ScrollToTop>\n    </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}